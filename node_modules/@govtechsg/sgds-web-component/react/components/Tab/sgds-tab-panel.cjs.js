'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var lit = require('lit');
var decorators_js = require('lit/decorators.js');
var classMap_js = require('lit/directives/class-map.js');
var sgdsElement = require('../../base/sgds-element.cjs.js');
var watch = require('../../utils/watch.cjs.js');
var tabPanel = require('./tab-panel.cjs.js');

let id = 0;
/**
 * @summary Tab panels are used inside tab groups to display tabbed content.
 * @slot - The tab panel's content.
 *
 */
class SgdsTabPanel extends sgdsElement["default"] {
    constructor() {
        super(...arguments);
        this.attrId = ++id;
        this.componentId = `sgds-tab-panel-${this.attrId}`;
        /** The tab panel's name. */
        this.name = "";
        /** When true, the tab panel will be shown. When used with tab-group, this property is already being managed */
        this.active = false;
    }
    connectedCallback() {
        super.connectedCallback();
        this.id = this.id.length > 0 ? this.id : this.componentId;
        this.setAttribute("role", "tabpanel");
    }
    _handleActiveChange() {
        this.setAttribute("aria-hidden", this.active ? "false" : "true");
    }
    render() {
        return lit.html `
      <slot
        class=${classMap_js.classMap({
            "tab-panel": true,
            "tab-panel--active": this.active
        })}
      ></slot>
    `;
    }
}
SgdsTabPanel.styles = [...sgdsElement["default"].styles, tabPanel["default"]];
tslib.__decorate([
    decorators_js.property({ reflect: true })
], SgdsTabPanel.prototype, "name", void 0);
tslib.__decorate([
    decorators_js.property({ type: Boolean, reflect: true })
], SgdsTabPanel.prototype, "active", void 0);
tslib.__decorate([
    watch.watch("active")
], SgdsTabPanel.prototype, "_handleActiveChange", null);

exports.SgdsTabPanel = SgdsTabPanel;
exports["default"] = SgdsTabPanel;
//# sourceMappingURL=sgds-tab-panel.cjs.js.map
