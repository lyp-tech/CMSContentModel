import { __decorate } from 'tslib';
import SgdsElement from '../../base/sgds-element.js';
import { html } from 'lit/static-html.js';
import { property, state } from 'lit/decorators.js';
import { unsafeSVG } from 'lit/directives/unsafe-svg.js';
import css_248z from './icon.js';

/**
 * @summary Icons offer a form of visual shorthand that we are all familiar with. They can label, inform and aid navigation quickly and effectively in minimal space. Icons must first and foremost communicate meaning. By default, the icon component renders icons from `SgdsIcon` library set
 */
class SgdsIcon extends SgdsElement {
    constructor() {
        super(...arguments);
        /** Specifies a small, medium or large icon, the size is medium by default. */
        this.size = "lg";
        /** @internal */
        this._svgContent = null;
    }
    async updated(changedProperties) {
        if (changedProperties.has("name")) {
            await this._loadSvg(this.name);
        }
    }
    async _loadSvg(name) {
        if (name) {
            const pascalName = name
                .split("-")
                .map(name => String(name).charAt(0).toUpperCase() + String(name).slice(1))
                .join("");
            try {
                const iconRegistry = await import('./icon-registry.js');
                const svg = iconRegistry[pascalName];
                if (svg) {
                    this._svgContent = svg;
                }
                else {
                    throw new Error("icon `name` not found");
                }
            }
            catch (error) {
                console.error(`Unable to load icon: ${name}.`, error);
            }
        }
    }
    render() {
        return html `${unsafeSVG(this._svgContent)}`;
    }
}
SgdsIcon.styles = [...SgdsElement.styles, css_248z];
__decorate([
    property({ type: String, reflect: true })
], SgdsIcon.prototype, "name", void 0);
__decorate([
    property({ type: String, reflect: true })
], SgdsIcon.prototype, "size", void 0);
__decorate([
    state()
], SgdsIcon.prototype, "_svgContent", void 0);

export { SgdsIcon, SgdsIcon as default };
//# sourceMappingURL=sgds-icon.js.map
