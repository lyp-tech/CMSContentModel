'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var decorators_js = require('lit/decorators.js');
var staticHtml_js = require('lit/static-html.js');
var classMap_js = require('lit/directives/class-map.js');
var sgdsElement = require('../../base/sgds-element.cjs.js');
var spinner = require('./spinner.cjs.js');
var textVariants = require('../../styles/text-variants.cjs.js');
var lit = require('lit');

/**
 * @summary Spinners notify the users that their request is being processed.
 *
 */
class SgdsSpinner extends sgdsElement["default"] {
    constructor() {
        super(...arguments);
        /** The variant of spinner */
        this.variant = "primary";
        /** Specifies a small, medium or large button, the size is medium by default. */
        this.size = "md";
    }
    render() {
        return staticHtml_js.html `
      <div class="spinner-wrapper">
        <div
          class="spinner ${classMap_js.classMap({
            [`spinner-${this.size}`]: this.size
        })}"
          role="status"
        >
          ${this.label ? lit.nothing : staticHtml_js.html `<span class="sr-only">Loading...</span>`}
        </div>
        ${this.label ? staticHtml_js.html `<span class="spinner-label">${this.label}</span>` : lit.nothing}
      </div>
    `;
    }
}
SgdsSpinner.styles = [...sgdsElement["default"].styles, textVariants["default"], spinner["default"]];
tslib.__decorate([
    decorators_js.property({ type: String, reflect: true })
], SgdsSpinner.prototype, "variant", void 0);
tslib.__decorate([
    decorators_js.property({ reflect: true })
], SgdsSpinner.prototype, "size", void 0);
tslib.__decorate([
    decorators_js.property({ reflect: true, type: String })
], SgdsSpinner.prototype, "label", void 0);

exports.SgdsSpinner = SgdsSpinner;
exports["default"] = SgdsSpinner;
//# sourceMappingURL=sgds-spinner.cjs.js.map
