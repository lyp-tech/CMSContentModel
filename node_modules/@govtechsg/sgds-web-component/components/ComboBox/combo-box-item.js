import { __decorate } from 'tslib';
import { html, nothing } from 'lit';
import { property } from 'lit/decorators.js';
import { classMap } from 'lit/directives/class-map.js';
import SgdsElement from '../../base/sgds-element.js';
import { SgdsCheckbox } from '../Checkbox/sgds-checkbox.js';
import { SgdsIcon } from '../Icon/sgds-icon.js';
import css_248z from './combo-box-item2.js';

class ComboBoxItem extends SgdsElement {
    constructor() {
        super(...arguments);
        /** when true, sets the active stylings */
        this.active = false;
        /** Disables the Item */
        this.disabled = false;
        /** If true, this item is rendered as a checkbox item */
        this.checkbox = false;
    }
    connectedCallback() {
        super.connectedCallback();
        this.setAttribute("role", "menuitem");
        this.setAttribute("aria-disabled", `${this.disabled}`);
        this.addEventListener("keydown", (e) => {
            if (e.key === "Enter") {
                this.checkbox ? this._handleCheckboxClick() : this._handleNonCheckboxClick();
            }
        });
    }
    _handleNonCheckboxClick() {
        if (!this.checkbox) {
            this.emit("sgds-select");
        }
    }
    _handleCheckboxClick() {
        this.shadowRoot.querySelector("sgds-checkbox").click();
    }
    _handleCheckboxChange(e) {
        const checkbox = e.target;
        this.active = checkbox.checked;
        this.active ? this.emit("sgds-select") : this.emit("sgds-unselect");
    }
    render() {
        const classes = {
            disabled: this.disabled,
            active: this.active,
            checkbox: this.checkbox
        };
        return html `
      <div class="dropdown-item ${classMap(classes)}" tabindex=${this.disabled ? "-1" : "0"}>
        ${this.checkbox
            ? html `
              <sgds-checkbox
                .checked=${this.active}
                .disabled=${this.disabled}
                @sgds-change=${this._handleCheckboxChange}
              >
                <slot></slot>
              </sgds-checkbox>
            `
            : html `
              <div class="normal-item-content" @click=${this._handleNonCheckboxClick}>
                <slot></slot>
                ${this.active ? html ` <sgds-icon name="check"></sgds-icon> ` : nothing}
              </div>
            `}
      </div>
    `;
    }
}
/** @internal */
ComboBoxItem.dependencies = {
    "sgds-icon": SgdsIcon,
    "sgds-checkbox": SgdsCheckbox
};
ComboBoxItem.styles = [css_248z];
__decorate([
    property({ type: Boolean, reflect: true })
], ComboBoxItem.prototype, "active", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], ComboBoxItem.prototype, "disabled", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], ComboBoxItem.prototype, "checkbox", void 0);

export { ComboBoxItem, ComboBoxItem as default };
//# sourceMappingURL=combo-box-item.js.map
