import SgdsDropdown from "../Dropdown/sgds-dropdown";
import SgdsDropdownItem from "../Dropdown/sgds-dropdown-item";
import SgdsIcon from "../Icon/sgds-icon";
import SgdsElement from "../../base/sgds-element";
/**
 * @slot default - The menu items. Pass in sgds-dropdown-item as the menu items
 * @slot toggler - The content of the toggler to pass in html content.
 */
export declare class SgdsMainnavDropdown extends SgdsElement {
    static styles: import("lit").CSSResult[];
    /** @internal */
    static dependencies: {
        "sgds-dropdown": typeof SgdsDropdown;
        "sgds-dropdown-item": typeof SgdsDropdownItem;
        "sgds-icon": typeof SgdsIcon;
    };
    private _breakpointReached;
    /** @internal */
    navLink: HTMLElement;
    /** @internal */
    dropdownItems: HTMLElement;
    /** @internal */
    menuHeaderButton: HTMLElement;
    /** @internal */
    menuHeaderText: HTMLElement;
    /** @internal Forwards value to id attribute of toggle button of Dropdown. An unique id generated by default */
    private togglerId;
    /** When true,  applies active styles on the dropdown button */
    active: boolean;
    /** When true,  applies active styles on the dropdown button */
    disabled: boolean;
    /** @internal */
    private togglerNodes;
    /** @internal */
    private defaultNodes;
    /** @internal */
    get defaultSlotItems(): SgdsDropdownItem[];
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected willUpdate(changedProperties: Map<string, unknown>): void;
    updated(): void;
    private _handleSlotChange;
    private _handleDesktopSlotChange;
    private _handleKeyboardMenuItemsEvent;
    private _copyTextToMenu;
    private _hideDropdownMenuItems;
    private _resetDropdownMenu;
    private _handleKeyboardOpen;
    private _getNavbarBody;
    private _openMenu;
    private _handleHeaderKeyboardEvent;
    private _closeMenu;
    render(): import("lit-html").TemplateResult<1>;
}
export default SgdsMainnavDropdown;
