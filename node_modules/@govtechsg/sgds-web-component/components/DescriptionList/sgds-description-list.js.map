{"version":3,"file":"sgds-description-list.js","sources":["../../../src/components/DescriptionList/sgds-description-list.ts"],"sourcesContent":["import { html } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport SgdsElement from \"../../base/sgds-element\";\nimport descriptionListStyle from \"./description-list.css\";\n\nlet id = 0;\n\n/**\n *\n * @summary Description Lists are used with description list group as list components. A description list (often referred to as a “definition list”) is a type of list used in web design and documentation to pair terms with their corresponding descriptions or values.\n *\n * @slot default - The slot for the label\n * @slot data - The slot for the data\n */\n\nexport class SgdsDescriptionList extends SgdsElement {\n  static styles = [...SgdsElement.styles, descriptionListStyle];\n  private readonly attrId = ++id;\n  private readonly componentId = `sgds-description-list-${this.attrId}`;\n\n  /** Makes the label and the data stacked */\n  @property({ type: Boolean, reflect: true }) stacked = false;\n\n  /** Changes the border bottom styles for bordered description list group */\n  @property({ type: Boolean, reflect: true }) bordered = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n    // If the user didn't provide an ID, we'll set one so we can link tabs and tab panels with aria labels\n\n    this.id = this.id.length > 0 ? this.id : this.componentId;\n    this.setAttribute(\"role\", \"listitem\");\n  }\n\n  render() {\n    return html`\n      <div class=\"container\" part=\"container\">\n        <div class=\"label-container\" part=\"label-container\">\n          <span class=\"label\" part=\"label\">\n            <slot></slot>\n          </span>\n        </div>\n        <div class=\"data-container\" part=\"data-container\">\n          <span class=\"data\" part=\"data\">\n            <slot name=\"data\"></slot>\n          </span>\n        </div>\n      </div>\n    `;\n  }\n}\n\nexport default SgdsDescriptionList;\n"],"names":["descriptionListStyle"],"mappings":";;;;;;AAKA,IAAI,EAAE,GAAG,CAAC,CAAC;AAEX;;;;;;AAMG;AAEG,MAAO,mBAAoB,SAAQ,WAAW,CAAA;AAApD,IAAA,WAAA,GAAA;;QAEmB,IAAM,CAAA,MAAA,GAAG,EAAE,EAAE,CAAC;AACd,QAAA,IAAA,CAAA,WAAW,GAAG,CAAyB,sBAAA,EAAA,IAAI,CAAC,MAAM,EAAE,CAAC;;QAG1B,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;;QAGhB,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;KA0B9D;IAxBC,iBAAiB,GAAA;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;;QAG1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;AAC1D,QAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;KACvC;IAED,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAA,CAAA;;;;;;;;;;;;;KAaV,CAAC;KACH;;AAjCM,mBAAM,CAAA,MAAA,GAAG,CAAC,GAAG,WAAW,CAAC,MAAM,EAAEA,QAAoB,CAA/C,CAAiD;AAKlB,UAAA,CAAA;IAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAAiB,CAAA,EAAA,mBAAA,CAAA,SAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAGhB,UAAA,CAAA;IAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAAkB,CAAA,EAAA,mBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;;;"}