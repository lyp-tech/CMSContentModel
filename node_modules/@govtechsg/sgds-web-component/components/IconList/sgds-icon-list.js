import { __decorate } from 'tslib';
import { html } from 'lit';
import { property } from 'lit/decorators.js';
import { classMap } from 'lit/directives/class-map.js';
import SgdsElement from '../../base/sgds-element.js';
import css_248z from './icon-list.js';

/**
 * @summary A IconList can be used to display content related to the same topic. Each list item begins an icon.
 *
 * @slot default - The list items of IconList. Each list items should have aria attribute role="listitem" added
 */
class SgdsIconList extends SgdsElement {
    constructor() {
        super(...arguments);
        /** Sets the aria-role of the sgds-icon-list */
        this.role = "list";
        /** The size of icon list. Changes the font-size the list items */
        this.size = "md";
    }
    render() {
        return html `
      <div class=${classMap({ [this.size]: this.size })}>
        <slot></slot>
      </div>
    `;
    }
}
SgdsIconList.styles = [...SgdsElement.styles, css_248z];
__decorate([
    property({ type: String, reflect: true })
], SgdsIconList.prototype, "role", void 0);
__decorate([
    property({ type: String, reflect: true })
], SgdsIconList.prototype, "size", void 0);

export { SgdsIconList, SgdsIconList as default };
//# sourceMappingURL=sgds-icon-list.js.map
