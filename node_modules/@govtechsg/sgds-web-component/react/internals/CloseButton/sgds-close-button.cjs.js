'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var lit = require('lit');
var decorators_js = require('lit/decorators.js');
var classMap_js = require('lit/directives/class-map.js');
var ifDefined_js = require('lit/directives/if-defined.js');
var sgdsElement = require('../../base/sgds-element.cjs.js');
var closeButton = require('./close-button.cjs.js');
var ceRegistry = require('../../utils/ce-registry.cjs.js');

/**
 * @summary Close button for closing actions. Used in Modal, Drawer, Alert and Toast.
 *
 * @cssprop --sgds-close-btn-border-radius - The border radius of close button border
 *
 */
class SgdsCloseButton extends sgdsElement["default"] {
    constructor() {
        super(...arguments);
        this.ariaLabel = "Close button";
        /** Specifies a large or small button */
        this.size = "md";
        this.variant = "default";
        this._clickHandler = () => {
            return;
        };
    }
    _handleClick() {
        this.removeEventListener("click", this._clickHandler);
        this.addEventListener("click", this._clickHandler);
    }
    firstUpdated() {
        /** Cannot register sgds-icon as dependency due to some circular dependencies, so we check and warn instead */
        ceRegistry.warnUnregisteredElements("sgds-icon");
    }
    render() {
        return lit.html `
      <button
        class=${classMap_js.classMap({
            "btn-close": true,
            [`btn-close-${this.size}`]: this.size,
            "btn-close-light": this.variant === "light",
            "btn-close-dark": this.variant === "dark"
        })}
        aria-label=${ifDefined_js.ifDefined(this.ariaLabel)}
        @click=${this._handleClick}
      >
        <sgds-icon name="cross" size=${this.size}></sgds-icon>
      </button>
    `;
    }
}
SgdsCloseButton.styles = [...sgdsElement["default"].styles, closeButton["default"]];
tslib.__decorate([
    decorators_js.property({ type: String })
], SgdsCloseButton.prototype, "ariaLabel", void 0);
tslib.__decorate([
    decorators_js.property({ type: String, reflect: true })
], SgdsCloseButton.prototype, "size", void 0);
tslib.__decorate([
    decorators_js.property({ type: String, reflect: true })
], SgdsCloseButton.prototype, "variant", void 0);

exports.SgdsCloseButton = SgdsCloseButton;
exports["default"] = SgdsCloseButton;
//# sourceMappingURL=sgds-close-button.cjs.js.map
