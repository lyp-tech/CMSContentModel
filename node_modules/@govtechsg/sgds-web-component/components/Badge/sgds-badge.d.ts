import { nothing } from "lit";
import SgdsElement from "../../base/sgds-element";
import SgdsCloseButton from "../../internals/CloseButton/sgds-close-button";
export type BadgeVariant = "info" | "success" | "danger" | "warning" | "neutral";
/**
 * @summary Badges can be used to highlight important bits of information such as labels, notifications & status.
 *
 * @slot default - slot for badge
 * @slot icon - The slot for icon to the left of the badge text
 *
 * @event sgds-show - Emitted when the badge appears.
 * @event sgds-hide - Emitted after the badge closes.
 */
export declare class SgdsBadge extends SgdsElement {
    static styles: import("lit").CSSResult[];
    /**@internal */
    static dependencies: {
        "sgds-close-button": typeof SgdsCloseButton;
    };
    /** Controls the appearance of the dismissible badge. This prop only applies when dismissible is true  */
    show: boolean;
    /** One or more button variant combinations buttons may be one of a variety of visual variants such as: `info`, `success`, `danger`, `warning`, 'neutral' */
    variant: BadgeVariant;
    /** Manually set the outlined state to false */
    outlined: boolean;
    /** Manually set the dismissible state of the button to `false` */
    dismissible: boolean;
    /** Closes the badge  */
    close(): void;
    /**@internal */
    _handleShowChange(): void;
    render(): import("lit-html").TemplateResult<1> | typeof nothing;
}
export default SgdsBadge;
