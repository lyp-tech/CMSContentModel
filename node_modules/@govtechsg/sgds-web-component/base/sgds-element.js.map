{"version":3,"file":"sgds-element.js","sources":["../../src/base/sgds-element.ts"],"sourcesContent":["import { LitElement, type CSSResult } from \"lit\";\nimport style from \"./sgds-element.css\";\n/**\n * @cssprop --sgds-{stateColor} - State colors in hexadecimal value\n * @cssprop --sgds-{stateColor}-rgb - State colors in rgb value\n * @cssprop --sgds-{stateColor}-{weights} - State colors with different weightage in hexadecimal value\n * @cssprop --sgds-gray-{weights} - State colors with different weightage in hexadecimal value\n * @cssprop --overlay-background-color - The drawer and modal component overlay background color\n * @cssprop --zindex-modal - The drawer and modal component z-index value\n */\n\nexport default class SgdsElement extends LitElement {\n  static styles: CSSResult[] = [style];\n  /** Emits a custom event with more convenient defaults. */\n  emit(name: string, options?: CustomEventInit) {\n    const event = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n      detail: {},\n      ...options\n    });\n\n    this.dispatchEvent(event);\n\n    return event;\n  }\n  static define(name: string, elementConstructor = this, options: ElementDefinitionOptions = {}) {\n    const currentlyRegisteredConstructor = customElements.get(name) as CustomElementConstructor | typeof SgdsElement;\n\n    if (!currentlyRegisteredConstructor) {\n      // We try to register as the actual class first. If for some reason that fails, we fall back to anonymous classes.\n      // customElements can only have 1 class of the same \"object id\" per registry, so that is why the try {} catch {} exists.\n      // Some tools like Jest Snapshots and if you import the constructor and call `new SgdsButton()` they will fail with\n      //   the anonymous class version.\n      try {\n        customElements.define(name, elementConstructor, options);\n      } catch (_err) {\n        customElements.define(name, class extends elementConstructor {}, options);\n      }\n      return;\n    }\n\n    // let newVersion = ' (unknown version)';\n    // let existingVersion = newVersion;\n\n    // if ('version' in elementConstructor && elementConstructor.version) {\n    //   newVersion = ' v' + elementConstructor.version;\n    // }\n\n    // if ('version' in currentlyRegisteredConstructor && currentlyRegisteredConstructor.version) {\n    //   existingVersion = ' v' + currentlyRegisteredConstructor.version;\n    // }\n\n    // // Need to make sure we're not working with null or empty strings before doing version comparisons.\n    // if (newVersion && existingVersion && newVersion === existingVersion) {\n    //   // If versions match, we don't need to warn anyone. Carry on.\n    //   return;\n    // }\n\n    // console.warn(\n    //   `Attempted to register <${name}>${newVersion}, but <${name}>${existingVersion} has already been registered.`\n    // );\n  }\n  /** @internal */\n  static dependencies: Record<string, typeof SgdsElement> = {};\n\n  constructor() {\n    super();\n    Object.entries((this.constructor as typeof SgdsElement).dependencies).forEach(([name, component]) => {\n      (this.constructor as typeof SgdsElement).define(name, component);\n    });\n  }\n}\n"],"names":["style"],"mappings":";;;AAEA;;;;;;;AAOG;AAEH,MAAqB,WAAY,SAAQ,UAAU,CAAA;;IAGjD,IAAI,CAAC,IAAY,EAAE,OAAyB,EAAA;QAC1C,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,EAChC,MAAA,CAAA,MAAA,CAAA,EAAA,OAAO,EAAE,IAAI,EACb,UAAU,EAAE,KAAK,EACjB,QAAQ,EAAE,IAAI,EACd,MAAM,EAAE,EAAE,EAAA,EACP,OAAO,CAAA,CACV,CAAC;AAEH,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAE1B,QAAA,OAAO,KAAK,CAAC;KACd;IACD,OAAO,MAAM,CAAC,IAAY,EAAE,kBAAkB,GAAG,IAAI,EAAE,OAAA,GAAoC,EAAE,EAAA;QAC3F,MAAM,8BAA8B,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAkD,CAAC;QAEjH,IAAI,CAAC,8BAA8B,EAAE;;;;;AAKnC,YAAA,IAAI;gBACF,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC;aAC1D;YAAC,OAAO,IAAI,EAAE;AACb,gBAAA,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,kBAAkB,CAAA;iBAAG,EAAE,OAAO,CAAC,CAAC;aAC3E;YACD,OAAO;SACR;;;;;;;;;;;;;;;;;KAsBF;AAID,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,MAAM,CAAC,OAAO,CAAE,IAAI,CAAC,WAAkC,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,KAAI;YACjG,IAAI,CAAC,WAAkC,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACnE,SAAC,CAAC,CAAC;KACJ;;AA5DM,WAAA,CAAA,MAAM,GAAgB,CAACA,QAAK,CAAC,CAAC;AAoDrC;AACO,WAAY,CAAA,YAAA,GAAuC,EAAE;;;;"}