import { DropdownListElement } from "../../base/dropdown-list-element";
export type DropDirection = "left" | "right" | "up" | "down";
export type DropdownButtonVariant = "primary" | "secondary" | "success" | "danger" | "warning" | "info" | "light" | "dark";
/**
 * @summary `SgdsDropdown` toggles contextual overlays for displaying lists of links.
 * @slot default - slot for sgds-dropdown-item passed into dropdown's menu
 * @slot toggler - slot for the toggler that triggers the open and closing of menu, typically a button. Only pass in a single element into this slot
 *
 */
export declare class SgdsDropdown extends DropdownListElement {
    static styles: import("lit").CSSResult[];
    constructor();
    /** Controls auto-flipping of menu */
    noFlip: boolean;
    /** When true, aligns right edge of menu with right edge of button */
    menuAlignRight: boolean;
    /** The drop position of menu relative to the toggle button */
    drop: DropDirection;
    private _toggler;
    private _handleCloseMenu;
    private _handleClick;
    connectedCallback(): Promise<void>;
    disconnectedCallback(): Promise<void>;
    firstUpdated(): Promise<void>;
    _handleDisabled(): void;
    render(): import("lit-html").TemplateResult<1>;
}
export default SgdsDropdown;
