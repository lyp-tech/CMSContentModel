'use client';
import { __decorate } from 'tslib';
import { html } from 'lit';
import { property } from 'lit/decorators.js';
import { classMap } from 'lit/directives/class-map.js';
import SgdsElement from '../../base/sgds-element.js';
import { watch } from '../../utils/watch.js';
import css_248z from './tab-panel.js';

let id = 0;
/**
 * @summary Tab panels are used inside tab groups to display tabbed content.
 * @slot - The tab panel's content.
 *
 */
class SgdsTabPanel extends SgdsElement {
    constructor() {
        super(...arguments);
        this.attrId = ++id;
        this.componentId = `sgds-tab-panel-${this.attrId}`;
        /** The tab panel's name. */
        this.name = "";
        /** When true, the tab panel will be shown. When used with tab-group, this property is already being managed */
        this.active = false;
    }
    connectedCallback() {
        super.connectedCallback();
        this.id = this.id.length > 0 ? this.id : this.componentId;
        this.setAttribute("role", "tabpanel");
    }
    _handleActiveChange() {
        this.setAttribute("aria-hidden", this.active ? "false" : "true");
    }
    render() {
        return html `
      <slot
        class=${classMap({
            "tab-panel": true,
            "tab-panel--active": this.active
        })}
      ></slot>
    `;
    }
}
SgdsTabPanel.styles = [...SgdsElement.styles, css_248z];
__decorate([
    property({ reflect: true })
], SgdsTabPanel.prototype, "name", void 0);
__decorate([
    property({ type: Boolean, reflect: true })
], SgdsTabPanel.prototype, "active", void 0);
__decorate([
    watch("active")
], SgdsTabPanel.prototype, "_handleActiveChange", null);

export { SgdsTabPanel, SgdsTabPanel as default };
//# sourceMappingURL=sgds-tab-panel.js.map
