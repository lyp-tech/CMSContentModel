'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var lit = require('lit');
var decorators_js = require('lit/decorators.js');
var classMap_js = require('lit/directives/class-map.js');
var sgdsElement = require('../../base/sgds-element.cjs.js');
var sgdsCheckbox = require('../Checkbox/sgds-checkbox.cjs.js');
var sgdsIcon = require('../Icon/sgds-icon.cjs.js');
var comboBoxItem = require('./combo-box-item.cjs2.js');

class ComboBoxItem extends sgdsElement["default"] {
    constructor() {
        super(...arguments);
        /** when true, sets the active stylings */
        this.active = false;
        /** Disables the Item */
        this.disabled = false;
        /** If true, this item is rendered as a checkbox item */
        this.checkbox = false;
    }
    connectedCallback() {
        super.connectedCallback();
        this.setAttribute("role", "menuitem");
        this.setAttribute("aria-disabled", `${this.disabled}`);
        this.addEventListener("keydown", (e) => {
            if (e.key === "Enter") {
                this.checkbox ? this._handleCheckboxClick() : this._handleNonCheckboxClick();
            }
        });
    }
    _handleNonCheckboxClick() {
        if (!this.checkbox) {
            this.emit("sgds-select");
        }
    }
    _handleCheckboxClick() {
        this.shadowRoot.querySelector("sgds-checkbox").click();
    }
    _handleCheckboxChange(e) {
        const checkbox = e.target;
        this.active = checkbox.checked;
        this.active ? this.emit("sgds-select") : this.emit("sgds-unselect");
    }
    render() {
        const classes = {
            disabled: this.disabled,
            active: this.active,
            checkbox: this.checkbox
        };
        return lit.html `
      <div class="dropdown-item ${classMap_js.classMap(classes)}" tabindex=${this.disabled ? "-1" : "0"}>
        ${this.checkbox
            ? lit.html `
              <sgds-checkbox
                .checked=${this.active}
                .disabled=${this.disabled}
                @sgds-change=${this._handleCheckboxChange}
              >
                <slot></slot>
              </sgds-checkbox>
            `
            : lit.html `
              <div class="normal-item-content" @click=${this._handleNonCheckboxClick}>
                <slot></slot>
                ${this.active ? lit.html ` <sgds-icon name="check"></sgds-icon> ` : lit.nothing}
              </div>
            `}
      </div>
    `;
    }
}
/** @internal */
ComboBoxItem.dependencies = {
    "sgds-icon": sgdsIcon.SgdsIcon,
    "sgds-checkbox": sgdsCheckbox.SgdsCheckbox
};
ComboBoxItem.styles = [comboBoxItem["default"]];
tslib.__decorate([
    decorators_js.property({ type: Boolean, reflect: true })
], ComboBoxItem.prototype, "active", void 0);
tslib.__decorate([
    decorators_js.property({ type: Boolean, reflect: true })
], ComboBoxItem.prototype, "disabled", void 0);
tslib.__decorate([
    decorators_js.property({ type: Boolean, reflect: true })
], ComboBoxItem.prototype, "checkbox", void 0);

exports.ComboBoxItem = ComboBoxItem;
exports["default"] = ComboBoxItem;
//# sourceMappingURL=combo-box-item.cjs.js.map
