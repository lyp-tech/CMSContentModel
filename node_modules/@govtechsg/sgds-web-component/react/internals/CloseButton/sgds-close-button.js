'use client';
import { __decorate } from 'tslib';
import { html } from 'lit';
import { property } from 'lit/decorators.js';
import { classMap } from 'lit/directives/class-map.js';
import { ifDefined } from 'lit/directives/if-defined.js';
import SgdsElement from '../../base/sgds-element.js';
import css_248z from './close-button.js';
import { warnUnregisteredElements } from '../../utils/ce-registry.js';

/**
 * @summary Close button for closing actions. Used in Modal, Drawer, Alert and Toast.
 *
 * @cssprop --sgds-close-btn-border-radius - The border radius of close button border
 *
 */
class SgdsCloseButton extends SgdsElement {
    constructor() {
        super(...arguments);
        this.ariaLabel = "Close button";
        /** Specifies a large or small button */
        this.size = "md";
        this.variant = "default";
        this._clickHandler = () => {
            return;
        };
    }
    _handleClick() {
        this.removeEventListener("click", this._clickHandler);
        this.addEventListener("click", this._clickHandler);
    }
    firstUpdated() {
        /** Cannot register sgds-icon as dependency due to some circular dependencies, so we check and warn instead */
        warnUnregisteredElements("sgds-icon");
    }
    render() {
        return html `
      <button
        class=${classMap({
            "btn-close": true,
            [`btn-close-${this.size}`]: this.size,
            "btn-close-light": this.variant === "light",
            "btn-close-dark": this.variant === "dark"
        })}
        aria-label=${ifDefined(this.ariaLabel)}
        @click=${this._handleClick}
      >
        <sgds-icon name="cross" size=${this.size}></sgds-icon>
      </button>
    `;
    }
}
SgdsCloseButton.styles = [...SgdsElement.styles, css_248z];
__decorate([
    property({ type: String })
], SgdsCloseButton.prototype, "ariaLabel", void 0);
__decorate([
    property({ type: String, reflect: true })
], SgdsCloseButton.prototype, "size", void 0);
__decorate([
    property({ type: String, reflect: true })
], SgdsCloseButton.prototype, "variant", void 0);

export { SgdsCloseButton, SgdsCloseButton as default };
//# sourceMappingURL=sgds-close-button.js.map
