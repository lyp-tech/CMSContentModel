{"version":3,"file":"sgds-description-list-group.cjs.js","sources":["../../../../src/components/DescriptionList/sgds-description-list-group.ts"],"sourcesContent":["import { html, nothing, PropertyValues } from \"lit\";\nimport { property, queryAssignedElements } from \"lit/decorators.js\";\nimport SgdsElement from \"../../base/sgds-element\";\nimport descriptionListGroupStyle from \"./description-list-group.css\";\nimport { HasSlotController } from \"../../utils/slot\";\n\n/**\n * @summary Description List Group organizes multiple description lists.\n *\n * @slot default - The slot for `description-list` components\n * @slot title - Slot for the title content\n * @slot description - Slot for the description content\n *\n */\nexport class SgdsDescriptionListGroup extends SgdsElement {\n  static styles = [...SgdsElement.styles, descriptionListGroupStyle];\n\n  /** When true, adds a border around the entire group. */\n  @property({ type: Boolean, reflect: true }) bordered = false;\n\n  /** When true, the description lists are displayed in a stacked layout. */\n  @property({ type: Boolean, reflect: true }) stacked = false;\n\n  @queryAssignedElements({ flatten: true })\n  private _descriptionLists!: HTMLElement[];\n\n  /** @internal */\n  private readonly hasSlotController = new HasSlotController(this, \"title\", \"description\");\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"list\");\n    this.updateComplete.then(() => {\n      this._updateDescriptionLists();\n    });\n  }\n\n  private _updateDescriptionLists() {\n    if (!this._descriptionLists) return;\n    this._descriptionLists.forEach((descriptionList, index) => {\n      if (this.stacked) {\n        descriptionList.setAttribute(\"stacked\", \"\");\n      } else {\n        descriptionList.removeAttribute(\"stacked\");\n      }\n      if (this.bordered) {\n        descriptionList.setAttribute(\"bordered\", \"\");\n      } else {\n        descriptionList.removeAttribute(\"bordered\");\n      }\n\n      if (index === this._descriptionLists.length - 1) {\n        descriptionList.setAttribute(\"isLastChild\", \"\");\n      }\n    });\n  }\n\n  protected updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has(\"stacked\")) {\n      this._updateDescriptionLists();\n    }\n    if (_changedProperties.has(\"bordered\")) {\n      this._updateDescriptionLists();\n    }\n  }\n\n  render() {\n    const hasTitleSlot = this.hasSlotController.test(\"title\");\n    const hasDescriptionSlot = this.hasSlotController.test(\"description\");\n    return html`\n      <div class=\"container\" part=\"base\">\n        ${hasTitleSlot || hasDescriptionSlot\n          ? html`\n              <div class=\"header\">\n                ${hasTitleSlot\n                  ? html` <div class=\"title\">\n                      <slot name=\"title\"></slot>\n                    </div>`\n                  : nothing}\n                ${hasDescriptionSlot\n                  ? html`\n                      <div class=\"description\">\n                        <slot name=\"description\"></slot>\n                      </div>\n                    `\n                  : nothing}\n              </div>\n            `\n          : nothing}\n        <div>\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\nexport default SgdsDescriptionListGroup;\n"],"names":["SgdsElement","HasSlotController","html","nothing","descriptionListGroupStyle","__decorate","property","queryAssignedElements"],"mappings":"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"}